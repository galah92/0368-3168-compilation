class IntList
{
    int value;
    IntList next;
}

IntList MergeLists(IntList l1, IntList l2)
{
    if (l1 = nil)
    {
        return l2;
    }
    if (l2 = nil)
    {
        return l1;
    }
    
    if (l1.value < l2.value)
    {
        IntList l3 := l1;
        l3.next := MergeLists(l1.next,l2);
        return l3;
    }
    
    if (l2.value < l1.value)
    {
        IntList l3 := l2;
        l3.next := MergeLists(l1,l2.next);
        return l3;
    }
    
    /**************************************************/
    /* Execution falls off here ... what should we do */
    /**************************************************/
}

void main()
{
    IntList a := new IntList;
    IntList b := new IntList;
    IntList c := new IntList;
    IntList d := new IntList;

    IntList A := new IntList;
    IntList B := new IntList;
    IntList C := new IntList;
    IntList D := new IntList;
       
    a.value := 34;
    b.value := 70;
    c.value := 92;
    d.value := 96;

    A.value := 12;
    B.value := 50;
    C.value := 97;
    D.value := 99;

    a.next := b;
    b.next := c;
    c.next := d;
    d.next := nil;

    A.next := B;
    B.next := C;
    C.next := D;
    D.next := nil;
    
    IntList l := MergeLists(a,A);
    
    while (1 - (l = nil))
    {
        PrintInt(l.value);
        l := l.next;
    }
}
